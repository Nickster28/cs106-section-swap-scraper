/*
 * A program that, given the HTML of
 * https://cs198.stanford.edu/cs106/auth/section/ManageSections.aspx saved in
 "webpage.html" (the discussions sections page), scrapes the page and
 * autogenerates an email saved to "email.txt" that lists all sections with at
 * least 2 available spots.
 */

 const WEBPAGE_FILENAME = "./webpage.html";
 const OUTPUT_FILENAME = "./email.txt";

fs = require('fs');
const cheerio = require('cheerio');

fs.readFile(WEBPAGE_FILENAME, 'utf8', (err, data) => {
	if (err) throw err;
	else {
		parseDiscussionSections(data);
	}
});

/* Given a cheerio parser for the cs198 page, writes out an autogenerated email
 * to "email.txt" that lists all sections with at least 2 available spaces.
 */
function parseDiscussionSections(data) {
	var availableSections = new Set();

	// Parse each row and get the max slots and filled slots, and add its time
	// to the list of sections if it has at least 2 open slots.
	const $ = cheerio.load(data);
	$('table table tr').each((i, elem) => {
		const columns = $(elem).children();
		const maxSectionSize = parseInt($(columns[7]).text());
		const sectionSize = parseInt($(columns[6]).text());
		if (maxSectionSize - sectionSize >= 1) {
			availableSections.add($(columns[3]).text());
		}
	});

	// Output our set of section times to file in an autogenerated email.
	var outputText = "Hi NAME,\n" +
	"Unfortunately that section is full, so I can't swap you in.  If you both" +
	" would like to switch to a different section, the sections that " +
	"currently have at least 2 available spaces are:\n\n";

	for (let section of availableSections) {
		outputText += section + "\n";
	}

	outputText += "\nIf you would both like to switch into one of these " +
	"sections, please let me know ASAP, as I canâ€™t guarantee for how long " +
	"these slots will be available!\n\nNAME";

	fs.writeFile(OUTPUT_FILENAME, outputText, 'utf8');
}